services:
  redpanda:
    image: redpandadata/redpanda:latest
    container_name: redpanda
    ports:
      - "9092:9092"
      - "9644:9644"
    command:
      - redpanda
      - start
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
      - --kafka-addr=0.0.0.0:9092
      - --advertise-kafka-addr=redpanda:9092
      - --overprovisioned

  kafka-cp-kraft:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka-cp-kraft
    container_name: kafka-cp-kraft
    ports:
      - "9099:9092"
      - "29092:29092"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-cp-kraft:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka-cp-kraft:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://kafka-cp-kraft:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cp-kraft:29092,EXTERNAL://kafka-cp-kraft:9092
      KAFKA_LOG_DIRS: /tmp/kafka-logs
      CLUSTER_ID: "A1B2C3D4E5F6G7H8I9J0KQ"

  kafka-bitnami-kraft:
    image: bitnami/kafka:3.6
    hostname: kafka-bitnami-kraft
    container_name: kafka-bitnami-kraft
    ports:
      - "9098:9092"
      - "29093:29092"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-bitnami-kraft:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka-bitnami-kraft:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://kafka-bitnami-kraft:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-bitnami-kraft:29092,EXTERNAL://kafka-bitnami-kraft:9092
      KAFKA_LOG_DIRS: /tmp/kafka-logs


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=redpanda-local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=redpanda:9092
      - KAFKA_CLUSTERS_1_NAME=kafka-cp-kraft
      - KAFKA_CLUSTERS_1_BOOTSTRAP_SERVERS=kafka-cp-kraft:9092
      - KAFKA_CLUSTERS_2_NAME=kafka-bitnami-kraft
      - KAFKA_CLUSTERS_2_BOOTSTRAP_SERVERS=kafka-bitnami-kraft:9092
    depends_on:
      - redpanda
      - kafka-cp-kraft
      - kafka-bitnami-kraft

  producer:
    image: python:3.10-slim
    container_name: sensor-producer
    volumes:
      - ./producer:/app
    working_dir: /app
    command: [ "python", "producer.py" ]
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka-bitnami-kraft:9092
    depends_on:
      - kafka-bitnami-kraft

  demo-app:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: demo-app
    ports:
      - "8089:8089"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://timescaledb:5432/sensor-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-bitnami-kraft:9092
    depends_on:
      timescaledb:
        condition: service_healthy
    networks:
      - kafka-network
      - internal-network

  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: timescaledb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sensor-db
    ports:
      - "8085:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - internal-network
      - kafka-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kafka-network
      - internal-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - prometheus
    networks:
      - kafka-network
      - internal-network

  kafka-exporter:
    image: danielqsj/kafka-exporter
    ports:
      - "9308:9308"
    environment:
      KAFKA_BROKERS: "kafka-bitnami-kraft:29092"
      LOG_LEVEL: "debug"  # Включите логирование для диагностики
    restart: unless-stopped  # Автоматический перезапуск при падении
    networks:
      - kafka-network
      - internal-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@timescaledb:5432/sensor-db?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - internal-network
      - kafka-network

volumes:
  grafana-storage:

networks:
  kafka-network:
    external: true

  internal-network:
    external: true
    driver: bridge




